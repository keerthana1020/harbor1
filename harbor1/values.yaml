# Global Settings
global:
  storageClass: "gp2-csi"
  serviceType: "LoadBalancer"

# Harbor Core - COMPLETE FIX
harbor:
  core:
    replicaCount: 1
    image: "goharbor/harbor-core:v2.12.2"
    storage:
      size: "5Gi"
    service:
      type: "LoadBalancer"
      port: 80
    
    # Critical Fixes for Core
    secretKey: "$(openssl rand -hex 16)"  # Generate during install
    secretName: "harbor-core-secrets"
    
    # Database Connection
    env:
      POSTGRESQL_HOST: "harbor-database"
      POSTGRESQL_PORT: "5432"
      POSTGRESQL_USERNAME: "postgres"
      POSTGRESQL_PASSWORD: "$(openssl rand -hex 12)"  # Generate during install
      POSTGRESQL_DATABASE: "registry"
      POSTGRESQL_SSLMODE: "disable"
      
      # Redis Connection
      REDIS_HOST: "harbor-redis"
      REDIS_PORT: "6379"
      
      # Registry Connection
      REGISTRY_URL: "http://harbor-registry:5000"
    
    # Health Checks
    livenessProbe:
      httpGet:
        path: /api/ping
        port: 8080
      initialDelaySeconds: 120  # Increased for DB initialization
      periodSeconds: 30
    readinessProbe:
      httpGet:
        path: /api/ping
        port: 8080
      initialDelaySeconds: 30
      periodSeconds: 15
    
    # Resources
    resources:
      requests:
        memory: "512Mi"
        cpu: "300m"
      limits:
        memory: "1Gi"
        cpu: "500m"

# Portal (unchanged from your working version)
portal:
  enabled: true
  image:
    repository: goharbor/harbor-portal
    tag: v2.12.2
  securityContext:
    runAsUser: 10000
    runAsGroup: 10000
    fsGroup: 10000
    fsGroupChangePolicy: "OnRootMismatch"
  volumeMounts:
    - name: nginx-pid
      mountPath: /var/run/nginx.pid
      subPath: nginx.pid
  volumes:
    - name: nginx-pid
      emptyDir: {}
  containerPort: 8080
  podAnnotations:
    container.apparmor.security.beta.kubernetes.io/portal: runtime/default

# Registry (unchanged from your working version)
registry:
  enabled: true
  replicaCount: 1
  image: "goharbor/registry-photon:v2.12.2"
  storage:
    size: "5Gi"
    filesystem:
      rootdirectory: "/storage"
  config:
    enabled: true
    data:
      version: 0.1
      log:
        level: "info"
        formatter: "text"
      storage:
        filesystem:
          rootdirectory: "/storage"
      http:
        addr: ":5000"
        secret: "$(openssl rand -hex 16)"  # Generate during install
      auth:
        token:
          issuer: "harbor-token-issuer"
          realm: "https://core.harbor.local/service/token"
          rootcertbundle: "/etc/registry/root.crt"
  tls:
    enabled: true
    existingSecret: "harbor-ssl-secret"
  volumeMounts:
    - name: "registry-config"
      mountPath: "/etc/registry/config.yml"
      subPath: "config.yml"
    - name: "registry-certs"
      mountPath: "/etc/harbor/ssl"
      readOnly: true
  volumes:
    - name: "registry-config"
      configMap:
        name: "harbor-registry-config"
    - name: "registry-certs"
      secret:
        secretName: "harbor-ssl-secret"
        optional: false

# Database - Enhanced Configuration
postgresql:
  enabled: true
  replicaCount: 1
  image: "postgres:15"
  postgresqlUsername: "postgres"
  postgresqlPassword: "$(openssl rand -hex 12)"  # Generate during install
  postgresqlDatabase: "registry"
  persistence:
    size: "10Gi"
    storageClass: "gp2-csi"
  resources:
    requests:
      memory: "512Mi"
      cpu: "300m"
    limits:
      memory: "1Gi"
      cpu: "500m"

# Redis - Enhanced Configuration
redis:
  enabled: true
  replicaCount: 1
  image: "redis:6.2"
  auth:
    enabled: false  # Harbor doesn't use Redis auth
  persistence:
    size: "2Gi"
    storageClass: "gp2-csi"
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "300m"

# Trivy
trivy:
  enabled: true
  replicaCount: 1
  image: "aquasec/trivy:0.37.0"
  storage:
    size: "5Gi"

# PVC Configuration
persistence:
  enabled: true
  resourcePolicy: "keep"
  persistentVolumeClaim:
    registry:
      storageClass: "gp2-csi"
      accessMode: "ReadWriteOnce"
      size: "50Gi"
    portal:
      storageClass: "gp2-csi"
      accessMode: "ReadWriteOnce"
      size: "20Gi"
    database:
      storageClass: "gp2-csi"
      accessMode: "ReadWriteOnce"
      size: "10Gi"
    redis:
      storageClass: "gp2-csi"
      accessMode: "ReadWriteOnce"
      size: "2Gi"
    trivy:
      storageClass: "gp2-csi"
      accessMode: "ReadWriteOnce"
      size: "5Gi"

# SSL Configuration
tls:
  secretName: harbor-ssl-secret
  # Remove hardcoded certs - use kubectl create secret instead
